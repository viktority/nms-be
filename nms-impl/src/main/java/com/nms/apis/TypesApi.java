/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.23).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.nms.apis;


import com.nms.models.SpecificType;
import com.nms.models.Type;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import java.util.List;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-11-30T11:45:01.773Z[GMT]")
public interface TypesApi {

    @Operation(summary = "get all Types", description = "", tags = {"Types Management"})
    @ApiResponses(value = {
            @ApiResponse(responseCode = "200", description = "Get allTypess from database", content = @Content(array = @ArraySchema(schema = @Schema(implementation = Type.class)))),

            @ApiResponse(responseCode = "400", description = "bad input parameter")})
    @RequestMapping(value = "/types",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<List<Type>> getTypes();

    @Operation(summary = "Get Specific Types", description = "Get Specific Types", tags = {"Types Management"})
    @ApiResponses(value = {
            @ApiResponse(responseCode = "200", description = "Data retrieved.", content = @Content(array = @ArraySchema(schema = @Schema(implementation = SpecificType.class)))),

            @ApiResponse(responseCode = "400", description = "invalid input, object invalid")})
    @RequestMapping(value = "/types/{typeId}/specifictypes",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<List<SpecificType>> getSpecificTypesByTypeId(@Parameter(in = ParameterIn.PATH, description = "The Type Id.", required = true, schema = @Schema()) @PathVariable("typeId") Integer typeId);

}

